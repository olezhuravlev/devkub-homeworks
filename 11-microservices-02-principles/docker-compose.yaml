volumes:
  data:
  prometheus-data:
  grafana_data:

services:
  storage:
    image: minio/minio:latest
    container_name: storage
    command: server /data
    restart: always
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    container_name: minio-bucket
    depends_on:
      - storage
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc policy set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "

  uploader:
    build: ./uploader
    container_name: uploader
    depends_on:
      - storage
      - createbuckets
    expose:
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-STORAGE_BUCKET}
  
  security:
    build: ./security
    container_name: security
    expose: 
      - 3000
    environment:
      PORT: 3000

  gateway:
    image: nginx:alpine
    container_name: gateway
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./gateway/api_gateway.conf:/etc/nginx/api_gateway.conf:ro
      - ./gateway/api_backends.conf:/etc/nginx/api_backends.conf:ro
      - ./gateway/api_json_errors.conf:/etc/nginx/api_json_errors.conf:ro
      - ./gateway/html/:/etc/nginx/html/:ro
      - ./gateway/ssl/:/etc/ssl/:ro
      - ./gateway/api_conf.d/:/etc/nginx/api_conf.d/:ro
    ports:
      - "443:443"
    depends_on:
      - storage
      - uploader
      - security
